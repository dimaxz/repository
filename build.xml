<project name="demo-system" default="info">
    <property name="basedir" value="."/>

    <!-- task -->
    <target name="info" description="Command listing">
        <exec command="phing -f ${phing.file} -l" outputProperty="phing_targets"/>
        <echo>${phing_targets}</echo>
    </target>

    <target name="clean" description="Clean build drirectory">
        <delete dir="${basedir}/build"/>
        <echo msg="Task: clean - end!"/>
    </target>

    <target name="prepare" description="Prepare build dir">
        <mkdir dir="${basedir}/build"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/codebrowser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/cpd"/>
        <mkdir dir="${basedir}/build/dependencies"/>
        <mkdir dir="${basedir}/build/phpmetrics"/>
        <mkdir dir="${basedir}/build/documentation"/>
        <echo msg="Task: prepare - end!"/>
    </target>

    <target name="test" description="Run test with phpunit">
        <exec command="./vendor/bin/phpunit --bootstrap ./tests/bootstrap.php --configuration ./tests/phpunit.xml --coverage-text"
              passthru="true" checkreturn="true"/>

        <echo msg="Task: phpunit - end!"/>
    </target>

    <target name="phpmetrics" description="Code metrix">
        <exec command="phpmetrics
	--report-html ./build/phpmetrics/index.html
	--report-xml ./build/logs/phpmetrics.xml 
	--report-csv ./build/logs/phpmetrics.csv
	--violations-xml ./build/logs/violations.xml
	./src" dir="${basedir}" passthru="true"/>

        <echo msg="Task: phpmetrics - end!"/>
    </target>

    <target name="apigen" description="Generate php documentation">
        <exec command="apigen generate
--source ./src 
--destination ./build/documentation
--exclude *\_smarty_lib\*
--tree
--todo
--title Documentation-Api"
              dir="${basedir}" passthru="true"/>

        <echo msg="Task: apigen - end!"/>
    </target>

    <target name="pdepend" description="Dependency metric">
        <exec dir="${basedir}" executable="pdepend" logoutput="true">
            <arg line="--jdepend-xml=./build/logs/jdepend.xml
                       --jdepend-chart=./build/dependencies/jdepend.svg
                       --overview-pyramid=./build/dependencies/pyramid.svg
                       --optimization=best
                       --exclude=build/*,tests/*,vendor/*,application/*,tools/*
		       --debug
                       ./src"/>
        </exec>
        <echo msg="Task: pdepend - end!"/>
    </target>

    <target name="phpcb" description="Code benchmark metric">
        <exec dir="${basedir}" executable="phpcb" failonerror="false">
            <arg line="--log ./build/logs --source . --output ./build/codebrowser"/>
        </exec>
    </target>

    <target name="phpcs" description="CodeSniffer, check style metric">
        <exec dir="${basedir}" executable="phpcs" logoutput="true">
            <arg line="
--extensions=php 
--ignore=build/*,tests/*,vendor/*,application/*,tools/*
--standard=PSR2
--tab-width=4
--report=checkstyle 
--report-file=./build/logs/checkstyle.xml 
."/>
        </exec>
    </target>
    <target name="phpmd" description="Mess Detector metric">
        <exec dir="${basedir}" executable="phpmd" logoutput="true">
            <arg line="./src xml codesize --reportfile ./build/logs/pmd.xml"/>
        </exec>
    </target>
    <target name="phpcpd" description="Copy/Paste Detector">
        <exec dir="${basedir}" executable="phpcpd" logoutput="true">
            <arg line="--log-pmd=./build/logs/pmd-cpd.xml
                       --exclude=build
                       --exclude=tests
		       --exclude=vendor
                       ."/>
        </exec>
    </target>
</project>